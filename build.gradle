// Global gradle configuration. This configuration will be used for all sub-projects.
apply from: './configuration.gradle'
apply from: './repositories.gradle'
apply from: './dependencies.gradle'

/**
 * Global build script configuration ===============================================================
 */
buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.3.3'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7.3'
    }
}

/**
 * All projects global configuration ===============================================================
 */
allprojects {
    repositories {
        jcenter()
    }
}

/**
 * All projects global tasks =======================================================================
 */
/**
 * Task that cleans build directory of the root project.
 */
task clean(type: Delete) {
    delete rootProject.buildDir
}

/**
 * Task that cleans library artifacts directory.
 */
task cleanArtifacts(type: Delete) {
    // delete 'artifacts/universum/studios/android'
}

/**
 * Task that updates library artifacts directory.
 */
task updateArtifacts() {
    subprojects.findAll {
        if (it.name.startsWith("library")) {
            dependsOn ':' + it.name + ':updateArtifacts'
        }
    }
}

/**
 * Task that deploys (uploads) all library modules (except groups) into Maven local repository.
 */
task deployModulesToMavenLocal() {
    subprojects.findAll {
        if (it.name.startsWith("library-") && !it.name.endsWith('_group')) {
            dependsOn ':' + it.name + ':uploadArchives'
        }
    }
}

/**
 * Task that deploys (uploads) all library module groups into Maven local repository.
 */
task deployGroupsToMavenLocal() {
    subprojects.findAll {
        if (it.name.startsWith("library-") && it.name.endsWith('_group')) {
            dependsOn ':' + it.name + ':uploadArchives'
        }
    }
}

/**
 * Task that deploys (uploads) all library modules (except groups) up to the Bintray repository.
 */
task deployModulesToBintray() {
    subprojects.findAll {
        if (it.name.startsWith("library-") && !it.name.endsWith('_group')) {
            dependsOn ':' + it.name + ':bintrayUpload'
        }
    }
}

/**
 * Task that deploys (uploads) all library module groups up to the Bintray repository.
 */
task deployGroupsToBintray() {
    subprojects.findAll {
        if (it.name.startsWith("library-") && it.name.endsWith('_group')) {
            dependsOn ':' + it.name + ':bintrayUpload'
        }
    }
}