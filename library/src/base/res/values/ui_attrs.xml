<?xml version="1.0" encoding="utf-8"?>
<!--
/*
 * =================================================================================================
 *                             Copyright (C) 2017 Universum Studios
 * =================================================================================================
 *         Licensed under the Apache License, Version 2.0 or later (further "License" only).
 * *************************************************************************************************
 * You may use this file only in compliance with the License. More details and copy of this License
 * you may obtain at
 *
 * 		http://www.apache.org/licenses/LICENSE-2.0
 *
 * You can redistribute, modify or publish any part of the code written within this file but as it
 * is described in the License, the software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES or CONDITIONS OF ANY KIND.
 *
 * See the License for the specific language governing permissions and limitations under the License.
 * =================================================================================================
 */
-->
<resources xmlns:android="http://schemas.android.com/apk/res/android">

	<!-- ### THEME ============================================================================= -->

    <!-- Theme attributes. -->
    <declare-styleable name="Ui.Theme">

        <!-- ## METRICS ======================================================================== -->

        <!-- Primary spacing for content. -->
        <attr name="uiSpacingPrimary" format="dimension"/>
        <!-- Secondary spacing for content. -->
        <attr name="uiSpacingSecondary" format="dimension"/>
        <!-- Tertiary spacing for content. -->
        <attr name="uiSpacingTertiary" format="dimension"/>

        <!-- ## COLORS ========================================================================= -->

        <!-- Color used for error highlighting. -->
        <attr name="uiColorErrorHighlight" format="color"/>

        <!-- ## DRAWABLES ====================================================================== -->

        <!-- Background for collection item. -->
        <attr name="uiCollectionItemBackground" format="reference"/>
        <!-- Background for content. -->
        <attr name="uiContentBackground" format="reference"/>
        <!-- Background for content panel used on large screens. -->
        <attr name="uiContentPanelBackground" format="reference"/>

        <!-- ## ACTIONBAR/TOOLBAR ============================================================== -->

        <!-- Drop shadow for the Toolbar widget. -->
        <attr name="uiToolbarDropShadow" format="reference"/>
        <!-- Style for ActionButton widget without icon with only text presented. -->
        <attr name="uiActionTextButtonStyle" format="reference"/>
    </declare-styleable>

    <!-- Theme color related attributes. -->
    <declare-styleable name="Ui.Theme.Colors">
        <!-- Re-used. -->
        <attr name="colorControlNormal"/>
        <!-- Re-used. -->
        <attr name="android:disabledAlpha"/>
		<!-- Re-used. -->
		<attr name="uiColorErrorHighlight"/>
    </declare-styleable>

	<!-- ### WINDOW ============================================================================ -->

	<!-- PopupWindow attributes. -->
	<declare-styleable name="Ui.PopupWindow">
		<!-- Whether the popup window should overlap its anchor view. -->
		<attr name="uiOverlapAnchor" format="boolean"/>
		<!-- Color for the background of the pop up window. -->
		<attr name="uiColorPopupBackground" format="color"/>
	</declare-styleable>

	<!-- ### TEXT APPEARANCE =================================================================== -->

	<!-- TextAppearance attributes. -->
	<declare-styleable name="Ui.TextAppearance">
		<!-- Re-used. -->
		<attr name="android:textSize"/>
		<!-- Re-used. -->
		<attr name="android:textColor"/>
		<!-- Re-used. -->
		<attr name="android:textStyle"/>
		<!-- Re-used. -->
		<attr name="android:typeface"/>
		<!-- Re-used. -->
		<attr name="android:fontFamily"/>
		<!-- Relative path to the custom .ttf font placed within assets folder. -->
		<attr name="uiFontPath" format="string"/>
	</declare-styleable>

	<!-- ### WIDGET ============================================================================ -->

	<!-- Widget attributes. -->
	<declare-styleable name="Ui.Widget">
		<!-- Sets a vector drawable as icon of this view. -->
		<attr name="uiVectorIcon" format="reference"/>
		<!-- Sets a vector drawable as content of this view. -->
		<attr name="uiVectorSrc" format="reference"/>
		<!-- The vector drawable to be drawn to the start of the text. -->
		<attr name="uiVectorDrawableStart" format="reference"/>
		<!-- The vector drawable to be drawn to the end of the text. -->
		<attr name="uiVectorDrawableEnd" format="reference"/>
		<!-- The vector drawable to be drawn to top start of the text. -->
		<attr name="uiVectorDrawableTop" format="reference"/>
		<!-- The vector drawable to be drawn to the bottom of the text. -->
		<attr name="uiVectorDrawableBottom" format="reference"/>
		<!-- Inner content padding. -->
		<attr name="uiPaddingInner" format="dimension"/>
		<!-- Whether default selection via View.setSelected(boolean) is allowed or not. -->
		<attr name="uiAllowDefaultSelection" format="boolean"/>
		<!-- Note text. -->
		<attr name="uiNote" format="string"/>
		<!-- Whether the text should be trimmed or not. -->
		<attr name="uiTrimTextEnabled" format="boolean"/>
		<!-- Reference to array of colors to be used for graphics. -->
		<attr name="uiColors" format="reference"/>
		<!-- Whether a multi-colored graphics should be drawn or a single-colored one. -->
		<attr name="uiMultiColored" format="boolean"/>
		<!-- Whether a graphics should be drawn in rounded mode or not. -->
		<attr name="uiRounded" format="boolean"/>
		<!-- Tint to apply to the graphics. -->
		<attr name="uiTint" format="color"/>
		<!-- Blending mode used to apply the graphics tint. -->
		<attr name="uiTintMode">
			<!-- No tint will be applied at all. -->
			<enum name="none" value="-1"/>
			<!--
				The tint is drawn on top of the drawable.
				[Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]
			-->
			<enum name="src_over" value="3"/>
			<!--
				The tint is masked by the alpha channel of the drawable. The drawable’s
				color channels are thrown out. [Sa * Da, Sc * Da]
			-->
			<enum name="src_in" value="5"/>
			<!--
				The tint is drawn above the drawable, but with the drawable’s alpha
				channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]
			-->
			<enum name="src_atop" value="9"/>
			<!--
				Multiplies the color and alpha channels of the drawable with those of
				the tint. [Sa * Da, Sc * Dc]
			-->
			<enum name="multiply" value="14"/>
			<!-- [Sa + Da - Sa * Da, Sc + Dc - Sc * Dc] -->
			<enum name="screen" value="15"/>
			<!--
				Combines the tint and drawable color and alpha channels, clamping the
				result to valid color values. Saturate(S + D)
			-->
			<enum name="add" value="16"/>
		</attr>
		<!-- Tint to apply to the background graphics. -->
		<attr name="uiBackgroundTint" format="color"/>
		<!-- Blending mode used to apply the background graphics tint. -->
		<attr name="uiBackgroundTintMode">
			<!-- No tint will be applied at all. -->
			<enum name="none" value="-1"/>
			<!--
				The tint is drawn on top of the drawable.
				[Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]
			-->
			<enum name="src_over" value="3"/>
			<!--
				The tint is masked by the alpha channel of the drawable. The drawable’s
				color channels are thrown out. [Sa * Da, Sc * Da]
			-->
			<enum name="src_in" value="5"/>
			<!--
				The tint is drawn above the drawable, but with the drawable’s alpha
				channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]
			-->
			<enum name="src_atop" value="9"/>
			<!--
				Multiplies the color and alpha channels of the drawable with those of
				the tint. [Sa * Da, Sc * Dc]
			-->
			<enum name="multiply" value="14"/>
			<!-- [Sa + Da - Sa * Da, Sc + Dc - Sc * Dc] -->
			<enum name="screen" value="15"/>
			<!--
				Combines the tint and drawable color and alpha channels, clamping the
				result to valid color values. Saturate(S + D)
			-->
			<enum name="add" value="16"/>
		</attr>
		<!-- Tint to apply to the compound drawable/-s graphics. -->
		<attr name="uiDrawableTint" format="color"/>
		<!-- Blending mode used to apply the compound drawable/-s graphics tint. -->
		<attr name="uiDrawableTintMode">
			<!-- No tint will be applied at all. -->
			<enum name="none" value="-1"/>
			<!--
				The tint is drawn on top of the drawable.
				[Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]
			-->
			<enum name="src_over" value="3"/>
			<!--
				The tint is masked by the alpha channel of the drawable. The drawable’s
				color channels are thrown out. [Sa * Da, Sc * Da]
			-->
			<enum name="src_in" value="5"/>
			<!--
				The tint is drawn above the drawable, but with the drawable’s alpha
				channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]
			-->
			<enum name="src_atop" value="9"/>
			<!--
				Multiplies the color and alpha channels of the drawable with those of
				the tint. [Sa * Da, Sc * Dc]
			-->
			<enum name="multiply" value="14"/>
			<!-- [Sa + Da - Sa * Da, Sc + Dc - Sc * Dc] -->
			<enum name="screen" value="15"/>
			<!--
				Combines the tint and drawable color and alpha channels, clamping the
				result to valid color values. Saturate(S + D)
			-->
			<enum name="add" value="16"/>
		</attr>
		<!-- Tint to apply to the button graphics. -->
		<attr name="uiButtonTint" format="color"/>
		<!-- Blending mode used to apply the button graphics tint. -->
		<attr name="uiButtonTintMode">
			<!-- No tint will be applied at all. -->
			<enum name="none" value="-1"/>
			<!--
				The tint is drawn on top of the drawable.
				[Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]
			-->
			<enum name="src_over" value="3"/>
			<!--
				The tint is masked by the alpha channel of the drawable. The drawable’s
				color channels are thrown out. [Sa * Da, Sc * Da]
			-->
			<enum name="src_in" value="5"/>
			<!--
				The tint is drawn above the drawable, but with the drawable’s alpha
				channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]
			-->
			<enum name="src_atop" value="9"/>
			<!--
				Multiplies the color and alpha channels of the drawable with those of
				the tint. [Sa * Da, Sc * Dc]
			-->
			<enum name="multiply" value="14"/>
			<!-- [Sa + Da - Sa * Da, Sc + Dc - Sc * Dc] -->
			<enum name="screen" value="15"/>
			<!--
				Combines the tint and drawable color and alpha channels, clamping the
				result to valid color values. Saturate(S + D)
			-->
			<enum name="add" value="16"/>
		</attr>
		<!-- Tint to apply to the progress graphics. -->
		<attr name="uiProgressTint" format="color"/>
		<!-- Blending mode used to apply the progress graphics tint. -->
		<attr name="uiProgressTintMode">
			<!-- No tint will be applied at all. -->
			<enum name="none" value="-1"/>
			<!--
				The tint is drawn on top of the drawable.
				[Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]
			-->
			<enum name="src_over" value="3"/>
			<!--
				The tint is masked by the alpha channel of the drawable. The drawable’s
				color channels are thrown out. [Sa * Da, Sc * Da]
			-->
			<enum name="src_in" value="5"/>
			<!--
				The tint is drawn above the drawable, but with the drawable’s alpha
				channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]
			-->
			<enum name="src_atop" value="9"/>
			<!--
				Multiplies the color and alpha channels of the drawable with those of
				the tint. [Sa * Da, Sc * Dc]
			-->
			<enum name="multiply" value="14"/>
			<!-- [Sa + Da - Sa * Da, Sc + Dc - Sc * Dc] -->
			<enum name="screen" value="15"/>
			<!--
				Combines the tint and drawable color and alpha channels, clamping the
				result to valid color values. Saturate(S + D)
			-->
			<enum name="add" value="16"/>
		</attr>
		<!-- Tint to apply to the secondary progress graphics. -->
		<attr name="uiSecondaryProgressTint" format="color"/>
		<!-- Blending mode used to apply the secondary progress graphics tint. -->
		<attr name="uiSecondaryProgressTintMode">
			<!-- No tint will be applied at all. -->
			<enum name="none" value="-1"/>
			<!--
				The tint is drawn on top of the drawable.
				[Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]
			-->
			<enum name="src_over" value="3"/>
			<!--
				The tint is masked by the alpha channel of the drawable. The drawable’s
				color channels are thrown out. [Sa * Da, Sc * Da]
			-->
			<enum name="src_in" value="5"/>
			<!--
				The tint is drawn above the drawable, but with the drawable’s alpha
				channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]
			-->
			<enum name="src_atop" value="9"/>
			<!--
				Multiplies the color and alpha channels of the drawable with those of
				the tint. [Sa * Da, Sc * Dc]
			-->
			<enum name="multiply" value="14"/>
			<!-- [Sa + Da - Sa * Da, Sc + Dc - Sc * Dc] -->
			<enum name="screen" value="15"/>
			<!--
				Combines the tint and drawable color and alpha channels, clamping the
				result to valid color values. Saturate(S + D)
			-->
			<enum name="add" value="16"/>
		</attr>
		<!-- Tint to apply to the progress background graphics. -->
		<attr name="uiProgressBackgroundTint" format="color"/>
		<!-- Blending mode used to apply the progress background graphics tint. -->
		<attr name="uiProgressBackgroundTintMode">
			<!-- No tint will be applied at all. -->
			<enum name="none" value="-1"/>
			<!--
				The tint is drawn on top of the drawable.
				[Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]
			-->
			<enum name="src_over" value="3"/>
			<!--
				The tint is masked by the alpha channel of the drawable. The drawable’s
				color channels are thrown out. [Sa * Da, Sc * Da]
			-->
			<enum name="src_in" value="5"/>
			<!--
				The tint is drawn above the drawable, but with the drawable’s alpha
				channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]
			-->
			<enum name="src_atop" value="9"/>
			<!--
				Multiplies the color and alpha channels of the drawable with those of
				the tint. [Sa * Da, Sc * Dc]
			-->
			<enum name="multiply" value="14"/>
			<!-- [Sa + Da - Sa * Da, Sc + Dc - Sc * Dc] -->
			<enum name="screen" value="15"/>
			<!--
				Combines the tint and drawable color and alpha channels, clamping the
				result to valid color values. Saturate(S + D)
			-->
			<enum name="add" value="16"/>
		</attr>
		<!-- Tint to apply to the indeterminate graphics. -->
		<attr name="uiIndeterminateTint" format="color"/>
		<!-- Blending mode used to apply the indeterminate graphics tint. -->
		<attr name="uiIndeterminateTintMode">
			<!-- No tint will be applied at all. -->
			<enum name="none" value="-1"/>
			<!--
				The tint is drawn on top of the drawable.
				[Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]
			-->
			<enum name="src_over" value="3"/>
			<!--
				The tint is masked by the alpha channel of the drawable. The drawable’s
				color channels are thrown out. [Sa * Da, Sc * Da]
			-->
			<enum name="src_in" value="5"/>
			<!--
				The tint is drawn above the drawable, but with the drawable’s alpha
				channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]
			-->
			<enum name="src_atop" value="9"/>
			<!--
				Multiplies the color and alpha channels of the drawable with those of
				the tint. [Sa * Da, Sc * Dc]
			-->
			<enum name="multiply" value="14"/>
			<!-- [Sa + Da - Sa * Da, Sc + Dc - Sc * Dc] -->
			<enum name="screen" value="15"/>
			<!--
				Combines the tint and drawable color and alpha channels, clamping the
				result to valid color values. Saturate(S + D)
			-->
			<enum name="add" value="16"/>
		</attr>
		<!-- Tint to apply to the thumb graphics. -->
		<attr name="uiThumbTint" format="color"/>
		<!-- Blending mode used to apply the thumb graphics tint. -->
		<attr name="uiThumbTintMode">
			<!-- No tint will be applied at all. -->
			<enum name="none" value="-1"/>
			<!--
				The tint is drawn on top of the drawable.
				[Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]
			-->
			<enum name="src_over" value="3"/>
			<!--
				The tint is masked by the alpha channel of the drawable. The drawable’s
				color channels are thrown out. [Sa * Da, Sc * Da]
			-->
			<enum name="src_in" value="5"/>
			<!--
				The tint is drawn above the drawable, but with the drawable’s alpha
				channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]
			-->
			<enum name="src_atop" value="9"/>
			<!--
				Multiplies the color and alpha channels of the drawable with those of
				the tint. [Sa * Da, Sc * Dc]
			-->
			<enum name="multiply" value="14"/>
			<!-- [Sa + Da - Sa * Da, Sc + Dc - Sc * Dc] -->
			<enum name="screen" value="15"/>
			<!--
				Combines the tint and drawable color and alpha channels, clamping the
				result to valid color values. Saturate(S + D)
			-->
			<enum name="add" value="16"/>
		</attr>
		<!-- Tint to apply to the track graphics. -->
		<attr name="uiTrackTint" format="color"/>
		<!-- Blending mode used to apply the track graphics tint. -->
		<attr name="uiTrackTintMode">
			<!-- No tint will be applied at all. -->
			<enum name="none" value="-1"/>
			<!--
				The tint is drawn on top of the drawable.
				[Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]
			-->
			<enum name="src_over" value="3"/>
			<!--
				The tint is masked by the alpha channel of the drawable. The drawable’s
				color channels are thrown out. [Sa * Da, Sc * Da]
			-->
			<enum name="src_in" value="5"/>
			<!--
				The tint is drawn above the drawable, but with the drawable’s alpha
				channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]
			-->
			<enum name="src_atop" value="9"/>
			<!--
				Multiplies the color and alpha channels of the drawable with those of
				the tint. [Sa * Da, Sc * Dc]
			-->
			<enum name="multiply" value="14"/>
			<!-- [Sa + Da - Sa * Da, Sc + Dc - Sc * Dc] -->
			<enum name="screen" value="15"/>
			<!--
				Combines the tint and drawable color and alpha channels, clamping the
				result to valid color values. Saturate(S + D)
			-->
			<enum name="add" value="16"/>
		</attr>
		<!-- Indicator drawable. -->
		<attr name="uiIndicator" format="reference"/>
		<!-- Tint to apply to the indicator graphics. -->
		<attr name="uiIndicatorTint" format="color"/>
		<!-- Blending mode used to apply the indicator graphics tint. -->
		<attr name="uiIndicatorTintMode">
			<!-- No tint will be applied at all. -->
			<enum name="none" value="-1"/>
			<!--
				The tint is drawn on top of the drawable.
				[Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]
			-->
			<enum name="src_over" value="3"/>
			<!--
				The tint is masked by the alpha channel of the drawable. The drawable’s
				color channels are thrown out. [Sa * Da, Sc * Da]
			-->
			<enum name="src_in" value="5"/>
			<!--
				The tint is drawn above the drawable, but with the drawable’s alpha
				channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]
			-->
			<enum name="src_atop" value="9"/>
			<!--
				Multiplies the color and alpha channels of the drawable with those of
				the tint. [Sa * Da, Sc * Dc]
			-->
			<enum name="multiply" value="14"/>
			<!-- [Sa + Da - Sa * Da, Sc + Dc - Sc * Dc] -->
			<enum name="screen" value="15"/>
			<!--
				Combines the tint and drawable color and alpha channels, clamping the
				result to valid color values. Saturate(S + D)
			-->
			<enum name="add" value="16"/>
		</attr>
		<!-- Selection indicator drawable. -->
		<attr name="uiSelectionIndicator" format="reference"/>
		<!-- Tint to apply to the selection indicator graphics. -->
		<attr name="uiSelectionIndicatorTint" format="color"/>
		<!-- Blending mode used to apply the selection indicator graphics tint. -->
		<attr name="uiSelectionIndicatorTintMode">
			<!-- No tint will be applied at all. -->
			<enum name="none" value="-1"/>
			<!--
				The tint is drawn on top of the drawable.
				[Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]
			-->
			<enum name="src_over" value="3"/>
			<!--
				The tint is masked by the alpha channel of the drawable. The drawable’s
				color channels are thrown out. [Sa * Da, Sc * Da]
			-->
			<enum name="src_in" value="5"/>
			<!--
				The tint is drawn above the drawable, but with the drawable’s alpha
				channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]
			-->
			<enum name="src_atop" value="9"/>
			<!--
				Multiplies the color and alpha channels of the drawable with those of
				the tint. [Sa * Da, Sc * Dc]
			-->
			<enum name="multiply" value="14"/>
			<!-- [Sa + Da - Sa * Da, Sc + Dc - Sc * Dc] -->
			<enum name="screen" value="15"/>
			<!--
				Combines the tint and drawable color and alpha channels, clamping the
				result to valid color values. Saturate(S + D)
			-->
			<enum name="add" value="16"/>
		</attr>
		<!-- Background used in widget's error state. -->
		<attr name="uiErrorBackground" format="reference"/>
		<!-- Tint to apply to the error background graphics. -->
		<attr name="uiErrorBackgroundTint" format="color"/>
		<!-- Blending mode used to apply the error background graphics tint. -->
		<attr name="uiErrorBackgroundTintMode">
			<!-- No tint will be applied at all. -->
			<enum name="none" value="-1"/>
			<!--
				The tint is drawn on top of the drawable.
				[Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]
			-->
			<enum name="src_over" value="3"/>
			<!--
				The tint is masked by the alpha channel of the drawable. The drawable’s
				color channels are thrown out. [Sa * Da, Sc * Da]
			-->
			<enum name="src_in" value="5"/>
			<!--
				The tint is drawn above the drawable, but with the drawable’s alpha
				channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]
			-->
			<enum name="src_atop" value="9"/>
			<!--
				Multiplies the color and alpha channels of the drawable with those of
				the tint. [Sa * Da, Sc * Dc]
			-->
			<enum name="multiply" value="14"/>
			<!-- [Sa + Da - Sa * Da, Sc + Dc - Sc * Dc] -->
			<enum name="screen" value="15"/>
			<!--
				Combines the tint and drawable color and alpha channels, clamping the
				result to valid color values. Saturate(S + D)
			-->
			<enum name="add" value="16"/>
		</attr>
		<!-- Duration in milliseconds for reveal animation. -->
		<attr name="uiRevealDuration" format="integer"/>
		<!-- Duration in milliseconds for conceal animation. -->
		<attr name="uiConcealDuration" format="integer"/>
		<!-- Interpolator for reveal/conceal animation. -->
		<attr name="uiRevealInterpolator" format="reference"/>
		<!-- Minimum velocity for fling gesture in pixels per seconds. -->
		<attr name="uiFlingMinVelocity" format="float"/>
		<!-- Maximum velocity for fling gesture in pixels per seconds. -->
		<attr name="uiFlingMaxVelocity" format="float"/>
		<!-- Whether the pull feature should be enabled or not. -->
		<attr name="uiPullEnabled" format="boolean"/>
		<!-- Whether the refresh feature should be enabled or not. -->
		<attr name="uiRefreshEnabled" format="boolean"/>
		<!--
			Whether the refresh gesture should be enabled or not. If enabled, a user can initiate
			refresh via swipe down gesture.
		-->
		<attr name="uiRefreshGestureEnabled" format="boolean"/>
	</declare-styleable>

	<!-- View attributes. -->
	<declare-styleable name="Ui.View">
		<!-- Re-used. -->
		<attr name="uiAllowDefaultSelection"/>
		<!-- Re-used. -->
		<attr name="uiBackgroundTint"/>
		<!-- Re-used. -->
		<attr name="uiBackgroundTintMode"/>
	</declare-styleable>

	<!-- ViewGroup attributes. -->
	<declare-styleable name="Ui.ViewGroup">
		<!-- Re-used. -->
		<attr name="uiAllowDefaultSelection"/>
		<!-- Re-used. -->
		<attr name="uiBackgroundTint"/>
		<!-- Re-used. -->
		<attr name="uiBackgroundTintMode"/>
		<!-- Whether a soft keyboard should be hided on touch event or not. -->
		<attr name="uiHideSoftKeyboardOnTouch" format="boolean"/>
		<!-- Whether a view hierarchy should be empty or pre-inflated with default components. -->
		<attr name="uiWithEmptyViewHierarchy" format="boolean"/>
	</declare-styleable>
</resources>