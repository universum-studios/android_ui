/*
 * =================================================================================================
 *                             Copyright (C) 2017 Universum Studios
 * =================================================================================================
 *         Licensed under the Apache License, Version 2.0 or later (further "License" only).
 * -------------------------------------------------------------------------------------------------
 * You may use this file only in compliance with the License. More details and copy of this License
 * you may obtain at
 *
 * 		http://www.apache.org/licenses/LICENSE-2.0
 *
 * You can redistribute, modify or publish any part of the code written within this file but as it
 * is described in the License, the software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES or CONDITIONS OF ANY KIND.
 *
 * See the License for the specific language governing permissions and limitations under the License.
 * =================================================================================================
 */
repositories {
    maven { url repos.jitpack }
    maven { url repos.bintray.typesafeMavenReleases }
}

configurations { codacy }

dependencies {
    codacy 'com.github.codacy:codacy-coverage-reporter:2.0.0'
}

/**
 * Task that uploads code coverage up to the Codacy cloud.
 */
task uploadCoverageToCodacy(type: JavaExec) {
    group 'upload'
    description 'Uploads coverage report up to the Codacy cloud.'
    final String token
    final File tokensFile = file(config.codacy.tokensPath == null ? "none" : config.codacy.tokensPath)
    if (tokensFile.exists()) {
        final Properties tokens = new Properties()
        tokens.load(new FileInputStream(tokensFile))
        token = tokens[config.codacy.projectName]
    } else {
        token = System.getenv('CODACY_PROJECT_TOKEN')
    }
    main = "com.codacy.CodacyCoverageReporter"
    classpath = configurations.codacy
    args = [
            "-l",
            "Java",
            "-r",
            "${buildDir}/reports/jacoco/debug/jacoco.xml",
            "--projectToken",
            token == null ? "NO_TOKEN" : token
    ]
}