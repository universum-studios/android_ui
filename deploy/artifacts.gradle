/*
 * =================================================================================================
 *                             Copyright (C) 2017 Universum Studios
 * =================================================================================================
 *         Licensed under the Apache License, Version 2.0 or later (further "License" only).
 * -------------------------------------------------------------------------------------------------
 * You may use this file only in compliance with the License. More details and copy of this License
 * you may obtain at
 *
 * 		http://www.apache.org/licenses/LICENSE-2.0
 *
 * You can redistribute, modify or publish any part of the code written within this file but as it
 * is described in the License, the software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES or CONDITIONS OF ANY KIND.
 *
 * See the License for the specific language governing permissions and limitations under the License.
 * =================================================================================================
 */
final boolean isModule = project.name.startsWith('library-') && !project.name.endsWith('_group')
final boolean isPrimaryModule = project.name == 'library'

/**
 * Bundles project's classes into a .jar! file.
 */
task classesJar(type: Jar, dependsOn: ":${project.name}:bundleRelease") {
    group 'artifact'
    description "Bundles classes into 'artifact.jar' like file."
    from "${buildDir}/intermediates/classes/release"
}

/**
 * Generates javadoc documentation for the current project.
 */
task generateJavadoc(type: Javadoc) {
    source isModule ? android.sourceSets.main.java.srcDirs : android.sourceSets.release.java.srcDirs
    options {
        title = createJavadocTitle()
        header = config.javadoc.header
        author = true
        memberLevel = JavadocMemberLevel.PROTECTED
        if (!isPrimaryModule) {
            links config.javadoc.reference.online
        }
        links 'https://docs.oracle.com/javase/8/docs/api'
        links 'https://developer.android.com/reference'
        links 'https://developer.android.com/reference/android/support'
        links 'https://universum-studios.github.io/android_font/reference/1.x'
        links 'https://universum-studios.github.io/android_graphics/reference/1.x'
    }
    // Append class path with dependencies.
    classpath += files(android.getBootClasspath().join(File.pathSeparator))
    android.libraryVariants.all { variant ->
        if (variant.buildType.name == 'release') classpath += variant.getCompileClasspath(null)
    }
    failOnError false
}

/**
 * Function which creates title for Javadoc document specific for the current project module.
 *
 * @return Project specific Javadoc title.
 */
def createJavadocTitle() {
    def moduleName = project.name
    if (moduleName.startsWith("library")) {
        if (moduleName == 'library') return config.javadoc.title
        else return "${config.pom.project.name} (${moduleName.replace("library-", "").replace("_group", "")}) API"
    }
    return "Documentation"
}

/**
 * Bundles project's Javadoc into a .jar! file.
 */
task javadocJar(type: Jar) {
    group 'artifact'
    description "Bundles Javadoc into 'artifact-javadoc.jar' like file."
    classifier = 'javadoc'
    from generateJavadoc
}

/**
 * Bundles project's Raw sources into a .jar! file.
 */
task sourcesJar(type: Jar) {
    group 'artifact'
    description "Bundles Raw sources into 'artifact-sources.jar' like file."
    classifier = 'sources'
    from isModule ? android.sourceSets.main.java.srcDirs : android.sourceSets.release.java.srcDirs
    from isModule ? android.sourceSets.main.res.srcDirs : android.sourceSets.release.res.srcDirs
}

/**
 * Set of artifacts to be generated.
 */
artifacts {
    archives classesJar
    archives javadocJar
    archives sourcesJar
}